# —Ñ–∞–π–ª: src/vit_trainer/cli.py

"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ Click.
–ó–¥–µ—Å—å –æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –∫–æ–º–∞–Ω–¥—ã fit –∏ eval.
"""

from __future__ import annotations

import click
from pathlib import Path

from .train import train, evaluate
from .utils import setup_logger

# –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = setup_logger()


@click.group()
@click.version_option(package_name="vit-trainer")
def app():
    """üîß vit-trainer ‚Äî –æ–±—É—á–µ–Ω–∏–µ –∏ –æ—Ü–µ–Ω–∫–∞ ViT-–º–æ–¥–µ–ª–µ–π."""
    pass


@app.command(help="–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥–µ ImageFolder.")
@click.option("--data-dir",
              type=click.Path(exists=True, file_okay=False),
              required=True,
              help="–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ImageFolder.")
@click.option("--output-dir",
              type=str,
              default="checkpoints",
              help="–ö—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —á–µ–∫–ø–æ–π–Ω—Ç—ã.")
@click.option("--epochs",
              type=int,
              default=3,
              help="–ß–∏—Å–ª–æ —ç–ø–æ—Ö –æ–±—É—á–µ–Ω–∏—è.")
@click.option("--batch-size",
              type=int,
              default=32,
              help="–†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞.")
@click.option("--no-weights/--with-weights",
              default=False,
              help="–û—Ç–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –≤–∑–≤–µ—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Ç–µ—Ä—å.")
def fit(data_dir, output_dir, epochs, batch_size, no_weights):
    """
    –ö–æ–º–∞–Ω–¥–∞ fit:
      - –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞—Ç–∞—Å–µ—Ç –∏–∑ data_dir;
      - –æ–±—É—á–∞–µ—Ç –º–æ–¥–µ–ª—å;
      - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª—É—á—à–∏–µ –≤–µ—Å–∞ –≤ output_dir.
    """
    metrics = train(
        data_dir=Path(data_dir),
        output_dir=Path(output_dir),
        epochs=epochs,
        batch_size=batch_size,
        use_weights=not no_weights,
    )
    logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ–±—É—á–µ–Ω–∏–µ ‚Äî –º–µ—Ç—Ä–∏–∫–∏: %s", metrics)


@app.command(help="–û—Ü–µ–Ω–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —á–µ–∫–ø–æ–π–Ω—Ç –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏/—Ç–µ—Å—Ç–µ.")
@click.option("--checkpoint",
              type=click.Path(exists=True, dir_okay=False),
              required=True,
              help="–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –≤–µ—Å–∞–º–∏ –º–æ–¥–µ–ª–∏ (.bin –∏–ª–∏ .pt).")
@click.option("--data-dir",
              type=click.Path(exists=True, file_okay=False),
              required=True,
              help="–ü–∞–ø–∫–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–º–∏/—Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.")
def eval(checkpoint, data_dir):
    """
    –ö–æ–º–∞–Ω–¥–∞ eval:
      - –∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥–µ–ª—å –∏–∑ checkpoint;
      - –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –µ—ë –Ω–∞ data_dir;
      - –≤—ã–≤–æ–¥–∏—Ç –º–µ—Ç—Ä–∏–∫–∏.
    """
    metrics = evaluate(checkpoint=Path(checkpoint), data_dir=Path(data_dir))
    logger.info("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ü–µ–Ω–∫–∏: %s", metrics)


if __name__ == "__main__":
    app()